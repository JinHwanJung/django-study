"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from test_app.helper import add_test_app_directory_prefix

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-py6ubjbnb=$jh_-crh7hl4p)1&_)lg1by$1decjk(i+wxu7aj1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
THIRD_PARTY_APPS = [
    'rest_framework',
    'admin_honeypot',
]

LOCAL_APPS = [
    'base',
    'user',
    'article',
]

INSTALLED_APPS = []
INSTALLED_APPS.extend(DJANGO_APPS)
INSTALLED_APPS.extend(THIRD_PARTY_APPS)
for name in LOCAL_APPS:
    INSTALLED_APPS.append(add_test_app_directory_prefix(name))

AUTH_USER_MODEL = 'user.User'

MIDDLEWARE = [
    'querycount.middleware.QueryCountMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    add_test_app_directory_prefix('base.middleware.RoutingMiddleware')
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3'
        # 'NAME': ':memory:'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

QUERYCOUNT = {
    'THRESHOLDS': {
        'MEDIUM': 50,
        'HIGH': 200,
        'MIN_TIME_TO_LOG': 0,
        'MIN_QUERY_COUNT_TO_LOG': 0
    },
    'IGNORE_REQUEST_PATTERNS': [],
    'IGNORE_SQL_PATTERNS': [],
    'DISPLAY_DUPLICATES': True,
    'RESPONSE_HEADER': 'X-DjangoQueryCount-Count'
}


LOGGING_FILE_SIZE_5MB = 1024 * 1024 * 5
LOGGING_BACKUP_COUNT = 5
LOGGING_FORMATTER_FORMAT1 = 'format1'
LOGGING_FORMATTER_FORMAT2 = 'format2'
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        LOGGING_FORMATTER_FORMAT1: {
            'format': '[%(asctime)s] %(levelname)s %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        LOGGING_FORMATTER_FORMAT2: {
            'format': '%(levelname)s %(message)s [%(name)s:%(lineno)s]'
        }
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': BASE_DIR/'logs'/'info.log',
            'encoding': 'UTF-8',
            'maxBytes': LOGGING_FILE_SIZE_5MB,
            'backupCount': LOGGING_BACKUP_COUNT,
            'formatter': LOGGING_FORMATTER_FORMAT1
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': LOGGING_FORMATTER_FORMAT2
        }
    },
    'loggers': {
        'django.server': {
            'handlers': ['file', 'console'],
            'propagate': False,
            'level': 'INFO'
        },
        'django.request': {
            'handlers': ['file', 'console'],
            'propagate': False,
            'level': 'DEBUG'
        },
        '': {
            'level': 'DEBUG',
            'handlers': ['file'],
            'propagate': True
        }
    }
}
